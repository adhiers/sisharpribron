// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleASPMVCEF.DAL;

#nullable disable

namespace SampleASPMVCEF.Migrations
{
    [DbContext(typeof(FinalProjectContext))]
    [Migration("20250731015501_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SampleASPMVCEF.Models.Agreement", b =>
                {
                    b.Property<string>("AgreementId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly>("AgreementDate")
                        .HasColumnType("date");

                    b.Property<string>("CreditId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DealerCarId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Loiid")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LOIId");

                    b.Property<string>("MethodPayment")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SalesPersonId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("AgreementId")
                        .HasName("PK__Agreemen__0A3082C37867AFCC");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DealerCarId");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex(new[] { "Loiid" }, "UQ__Agreemen__E21E1B4DF45B50CA")
                        .IsUnique();

                    b.HasIndex(new[] { "CreditId" }, "UQ__Agreemen__ED5ED0BAA96CB6AE")
                        .IsUnique()
                        .HasFilter("[CreditId] IS NOT NULL");

                    b.ToTable("Agreement", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Car", b =>
                {
                    b.Property<string>("CarId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double>("BasePrice")
                        .HasColumnType("float");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("VIN");

                    b.HasKey("CarId")
                        .HasName("PK__Car__68A0342E76DD1CAA");

                    b.HasIndex(new[] { "VIN" }, "UQ__Car__C5DF234C36F8E37B")
                        .IsUnique();

                    b.ToTable("Car", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.ConsultHistory", b =>
                {
                    b.Property<string>("ConsultId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<DateOnly>("ConsultDate")
                        .HasColumnType("date");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("SalesPersonId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ConsultId")
                        .HasName("PK__ConsultH__28859B358E08874E");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("ConsultHistory", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Credit", b =>
                {
                    b.Property<string>("CreditId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double>("Bunga")
                        .HasColumnType("float");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<double>("MonthlyPayment")
                        .HasColumnType("float");

                    b.Property<double>("NominalKredit")
                        .HasColumnType("float");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("StatusCredit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("CreditId")
                        .HasName("PK__Credit__ED5ED0BB4B8EF0CC");

                    b.HasIndex("CustomerId");

                    b.ToTable("Credit", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IdCardNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64D80FC9D307");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Dealer", b =>
                {
                    b.Property<string>("DealerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DealerAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DealerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TaxRate")
                        .HasColumnType("int");

                    b.HasKey("DealerId")
                        .HasName("PK__Dealer__CA2F8EB2DFA14A30");

                    b.ToTable("Dealer", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.DealerCarList", b =>
                {
                    b.Property<string>("DealerCarId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CarId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double>("DealerCarPrice")
                        .HasColumnType("float");

                    b.Property<string>("DealerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("DealerCarId")
                        .HasName("PK__DealerCa__7DD0B58628B0B455");

                    b.HasIndex("CarId");

                    b.HasIndex("DealerId");

                    b.ToTable("DealerCarList", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.LetterOfIntent", b =>
                {
                    b.Property<string>("Loiid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LOIId");

                    b.Property<double?>("BookingFee")
                        .HasColumnType("float");

                    b.Property<string>("DealerCarId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("NegoPrice")
                        .HasColumnType("float");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Loiid")
                        .HasName("PK__LetterOf__E21E1B4C6C1B14CA");

                    b.HasIndex("DealerCarId");

                    b.ToTable("LetterOfIntent", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.OtherBenefit", b =>
                {
                    b.Property<string>("AgreementId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Benefit")
                        .HasColumnType("text");

                    b.HasKey("AgreementId")
                        .HasName("PK__OtherBen__0A3082C35A0C6F68");

                    b.ToTable("OtherBenefit", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.PaymentHistory", b =>
                {
                    b.Property<string>("PaymentId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("AgreementId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double>("Nominal")
                        .HasColumnType("float");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<double?>("PaymentLeft")
                        .HasColumnType("float");

                    b.HasKey("PaymentId")
                        .HasName("PK__PaymentH__9B556A383622A597");

                    b.HasIndex("AgreementId");

                    b.ToTable("PaymentHistory", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.SalesPerson", b =>
                {
                    b.Property<string>("SalesPersonId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("DealerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SalesName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SalesPersonId")
                        .HasName("PK__SalesPer__7A591C38E80E52F0");

                    b.HasIndex("DealerId");

                    b.ToTable("SalesPerson", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.TestDriveNego", b =>
                {
                    b.Property<string>("Tdnid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TDNId");

                    b.Property<string>("ConsultId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DealerCarId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("DealerId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("SalesPersonId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly>("Tdndate")
                        .HasColumnType("date")
                        .HasColumnName("TDNDate");

                    b.HasKey("Tdnid")
                        .HasName("PK__TestDriv__BC0D3AC587ECE0B2");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DealerCarId");

                    b.HasIndex("DealerId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("TestDriveNego", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Warranty", b =>
                {
                    b.Property<string>("WarrantyId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("AgreementId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("WarrantyPeriodDays")
                        .HasColumnType("int");

                    b.HasKey("WarrantyId")
                        .HasName("PK__Warranty__2ED31813F37CC3C4");

                    b.HasIndex(new[] { "AgreementId" }, "UQ__Warranty__0A3082C261A9FC44")
                        .IsUnique()
                        .HasFilter("[AgreementId] IS NOT NULL");

                    b.ToTable("Warranty", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.WarrantyClaim", b =>
                {
                    b.Property<string>("ClaimId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ServiceCenter")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("ServiceCost")
                        .HasColumnType("float");

                    b.Property<DateOnly>("ServiceDate")
                        .HasColumnType("date");

                    b.Property<string>("WarrantyId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ClaimId")
                        .HasName("PK__Warranty__EF2E139B66340F6A");

                    b.HasIndex("WarrantyId");

                    b.ToTable("WarrantyClaim", (string)null);
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Agreement", b =>
                {
                    b.HasOne("SampleASPMVCEF.Models.Credit", "Credit")
                        .WithOne("Agreement")
                        .HasForeignKey("SampleASPMVCEF.Models.Agreement", "CreditId")
                        .HasConstraintName("FK__Agreement__Credi__79C80F94");

                    b.HasOne("SampleASPMVCEF.Models.Customer", "Customer")
                        .WithMany("Agreements")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Agreement__Custo__78D3EB5B");

                    b.HasOne("SampleASPMVCEF.Models.DealerCarList", "DealerCar")
                        .WithMany("Agreements")
                        .HasForeignKey("DealerCarId")
                        .IsRequired()
                        .HasConstraintName("FK__Agreement__Deale__7CA47C3F");

                    b.HasOne("SampleASPMVCEF.Models.LetterOfIntent", "Loi")
                        .WithOne("Agreement")
                        .HasForeignKey("SampleASPMVCEF.Models.Agreement", "Loiid")
                        .IsRequired()
                        .HasConstraintName("FK__Agreement__LOIId__7ABC33CD");

                    b.HasOne("SampleASPMVCEF.Models.SalesPerson", "SalesPerson")
                        .WithMany("Agreements")
                        .HasForeignKey("SalesPersonId")
                        .IsRequired()
                        .HasConstraintName("FK__Agreement__Sales__7BB05806");

                    b.Navigation("Credit");

                    b.Navigation("Customer");

                    b.Navigation("DealerCar");

                    b.Navigation("Loi");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.ConsultHistory", b =>
                {
                    b.HasOne("SampleASPMVCEF.Models.Customer", "Customer")
                        .WithMany("ConsultHistories")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__ConsultHi__Custo__67A95F59");

                    b.HasOne("SampleASPMVCEF.Models.SalesPerson", "SalesPerson")
                        .WithMany("ConsultHistories")
                        .HasForeignKey("SalesPersonId")
                        .IsRequired()
                        .HasConstraintName("FK__ConsultHi__Sales__689D8392");

                    b.Navigation("Customer");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Credit", b =>
                {
                    b.HasOne("SampleASPMVCEF.Models.Customer", "Customer")
                        .WithMany("Credits")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Credit__Customer__740F363E");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.DealerCarList", b =>
                {
                    b.HasOne("SampleASPMVCEF.Models.Car", "Car")
                        .WithMany("DealerCarLists")
                        .HasForeignKey("CarId")
                        .HasConstraintName("FK__DealerCar__CarId__63D8CE75");

                    b.HasOne("SampleASPMVCEF.Models.Dealer", "Dealer")
                        .WithMany("DealerCarLists")
                        .HasForeignKey("DealerId")
                        .HasConstraintName("FK__DealerCar__Deale__64CCF2AE");

                    b.Navigation("Car");

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.LetterOfIntent", b =>
                {
                    b.HasOne("SampleASPMVCEF.Models.DealerCarList", "DealerCar")
                        .WithMany("LetterOfIntents")
                        .HasForeignKey("DealerCarId")
                        .HasConstraintName("FK__LetterOfI__Deale__7132C993");

                    b.Navigation("DealerCar");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.OtherBenefit", b =>
                {
                    b.HasOne("SampleASPMVCEF.Models.Agreement", "Agreement")
                        .WithOne("OtherBenefit")
                        .HasForeignKey("SampleASPMVCEF.Models.OtherBenefit", "AgreementId")
                        .IsRequired()
                        .HasConstraintName("FK__OtherBene__Agree__025D5595");

                    b.Navigation("Agreement");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.PaymentHistory", b =>
                {
                    b.HasOne("SampleASPMVCEF.Models.Agreement", "Agreement")
                        .WithMany("PaymentHistories")
                        .HasForeignKey("AgreementId")
                        .IsRequired()
                        .HasConstraintName("FK__PaymentHi__Agree__7F80E8EA");

                    b.Navigation("Agreement");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.SalesPerson", b =>
                {
                    b.HasOne("SampleASPMVCEF.Models.Dealer", "Dealer")
                        .WithMany("SalesPeople")
                        .HasForeignKey("DealerId")
                        .HasConstraintName("FK__SalesPers__Deale__60FC61CA");

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.TestDriveNego", b =>
                {
                    b.HasOne("SampleASPMVCEF.Models.Customer", "Customer")
                        .WithMany("TestDriveNegos")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__TestDrive__Custo__6B79F03D");

                    b.HasOne("SampleASPMVCEF.Models.DealerCarList", "DealerCar")
                        .WithMany("TestDriveNegos")
                        .HasForeignKey("DealerCarId")
                        .IsRequired()
                        .HasConstraintName("FK__TestDrive__Deale__6E565CE8");

                    b.HasOne("SampleASPMVCEF.Models.Dealer", "Dealer")
                        .WithMany("TestDriveNegos")
                        .HasForeignKey("DealerId")
                        .IsRequired()
                        .HasConstraintName("FK__TestDrive__Deale__6C6E1476");

                    b.HasOne("SampleASPMVCEF.Models.SalesPerson", "SalesPerson")
                        .WithMany("TestDriveNegos")
                        .HasForeignKey("SalesPersonId")
                        .IsRequired()
                        .HasConstraintName("FK__TestDrive__Sales__6D6238AF");

                    b.Navigation("Customer");

                    b.Navigation("Dealer");

                    b.Navigation("DealerCar");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Warranty", b =>
                {
                    b.HasOne("SampleASPMVCEF.Models.Agreement", "Agreement")
                        .WithOne("Warranty")
                        .HasForeignKey("SampleASPMVCEF.Models.Warranty", "AgreementId")
                        .HasConstraintName("FK__Warranty__Agreem__062DE679");

                    b.Navigation("Agreement");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.WarrantyClaim", b =>
                {
                    b.HasOne("SampleASPMVCEF.Models.Warranty", "Warranty")
                        .WithMany("WarrantyClaims")
                        .HasForeignKey("WarrantyId")
                        .IsRequired()
                        .HasConstraintName("FK__WarrantyC__Warra__090A5324");

                    b.Navigation("Warranty");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Agreement", b =>
                {
                    b.Navigation("OtherBenefit");

                    b.Navigation("PaymentHistories");

                    b.Navigation("Warranty");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Car", b =>
                {
                    b.Navigation("DealerCarLists");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Credit", b =>
                {
                    b.Navigation("Agreement");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Customer", b =>
                {
                    b.Navigation("Agreements");

                    b.Navigation("ConsultHistories");

                    b.Navigation("Credits");

                    b.Navigation("TestDriveNegos");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Dealer", b =>
                {
                    b.Navigation("DealerCarLists");

                    b.Navigation("SalesPeople");

                    b.Navigation("TestDriveNegos");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.DealerCarList", b =>
                {
                    b.Navigation("Agreements");

                    b.Navigation("LetterOfIntents");

                    b.Navigation("TestDriveNegos");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.LetterOfIntent", b =>
                {
                    b.Navigation("Agreement");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.SalesPerson", b =>
                {
                    b.Navigation("Agreements");

                    b.Navigation("ConsultHistories");

                    b.Navigation("TestDriveNegos");
                });

            modelBuilder.Entity("SampleASPMVCEF.Models.Warranty", b =>
                {
                    b.Navigation("WarrantyClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
